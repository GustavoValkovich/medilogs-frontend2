{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { environment } from '../../../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let PacienteService = /*#__PURE__*/(() => {\n  class PacienteService {\n    constructor(http) {\n      this.http = http;\n      this.base = environment.apiBase;\n    }\n    authHeaders() {\n      const token = localStorage.getItem('medilogs_token');\n      if (token) {\n        return {\n          headers: new HttpHeaders({\n            Authorization: `Bearer ${token}`\n          })\n        };\n      }\n      return {};\n    }\n    getPacientes() {\n      return this.http.get(`${this.base}/patients`);\n    }\n    getPaciente(id) {\n      return this.http.get(`${this.base}/patients/${id}`);\n    }\n    createPaciente(data) {\n      return this.http.post(`${this.base}/patients`, data);\n    }\n    createHistoria(pacienteId, historia) {\n      // las consultas en el backend requieren autenticación; si existe token local lo enviamos\n      return this.http.post(`${this.base}/consultations`, {\n        pacienteId,\n        ...historia\n      }, this.authHeaders());\n    }\n    static {\n      this.ɵfac = function PacienteService_Factory(t) {\n        return new (t || PacienteService)(i0.ɵɵinject(i1.HttpClient));\n      };\n    }\n    static {\n      this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n        token: PacienteService,\n        factory: PacienteService.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return PacienteService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}